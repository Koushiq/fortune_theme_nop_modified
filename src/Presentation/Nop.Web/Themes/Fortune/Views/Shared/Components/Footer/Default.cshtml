@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
@inject IStoreContext storeContext
@inject Nop.Services.Configuration.ISettingService settingService
@inject Nop.Services.Media.IPictureService pictureService

@{
    var html = settingService.GetSettingByKey<string>("FortuneSettings.FooterTopDescription", loadSharedValueIfNotFound: true, storeId: storeContext.CurrentStore.Id);

    var footerLogoPictureId = settingService.GetSettingByKey<int>("FortuneSettings.FooterLogoPictureId", storeContext.CurrentStore.Id, loadSharedValueIfNotFound: true);
    var footerLogoPictureUrl = pictureService.GetPictureUrl(footerLogoPictureId);

    var footerEmail = settingService.GetSettingByKey<string>("FortuneSettings.FooterEmail", storeId: storeContext.CurrentStore.Id, loadSharedValueIfNotFound: true);
}

@Html.Raw(html)
@await Component.InvokeAsync("Widget", new { widgetZone = "fortune_footer_top_description" })
@await Component.InvokeAsync("NewsletterBox")
<div class="footer clearfix">
    <div class="footer-upper clearfix">
        <div class="custom-container">
            <div class="footer-block footer-logo">
                <div class="logo">
                    <a href="#"><img src="@footerLogoPictureUrl" alt="footer logo" /></a>
                    <p><i class="icon-email"></i> @footerEmail</p>
                </div>

            </div>

            <div class="footer-block information">
                <div class="title icon-more">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block customer-service">
                <div class="title icon-more">
                    <strong>@T("Footer.CustomerService")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayProductSearchFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                    }
                    @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                    }
                    @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    }
                    @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                    @if (Model.AllowCustomersToCheckGiftCardBalance)
                    {
                        <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block my-account">
                <div class="title icon-more">
                    <strong>@T("Footer.MyAccount")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block follow-us">
                <div class="social">
                    <div class="title icon-more">
                        <strong>@T("Footer.FollowUs")</strong>
                    </div>
                    @await Component.InvokeAsync("SocialButtons")
                </div>
            </div>
        </div>
    </div>
    <div class="footer-lower">
        <div class="custom-container">
            <div class="left">
                <div class="footer-info">
                    <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                    @if (Model.DisplayTaxShippingInfoFooter)
                    {
                        var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                        <span class="footer-tax-shipping">
                            @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </span>
                    }
                </div>
            </div>
            <div class="middle">
                @await Component.InvokeAsync("StoreThemeSelector")
                @if (!Model.HidePoweredByNopCommerce)
                {
                    <div class="footer-powered-by">
                        @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                            Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                        Powered by <a href="https://www.nopcommerce.com/">nopCommerce</a>
                    </div>
                }
            </div>
            <div class="right">
                @{
                    var showSupportedCardsPictureAtPageFooter = settingService.GetSettingByKey<bool>("FortuneSettings.ShowSupportedCardsPictureAtPageFooter");
                    if (showSupportedCardsPictureAtPageFooter)
                    {
                        var pictureId = settingService.GetSettingByKey<int>("FortuneSettings.SupportedCardsPictureId");
                        var pictureUrl = pictureService.GetPictureUrl(pictureId);
                        <div class="payment-cart-logo bg-white text-center p-2"> <img src="@pictureUrl" /> </div>
                    }
                }
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
    </div>
</div>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 992) {
                $(this).siblings('.list').slideToggle('slow');
            }
            $(this).toggleClass("icon-minus");
        });
    });
</script>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>